---
- name: Verify
  hosts:
    - subjects
  gather_facts: false
  tasks:
    - name: Check Windows Feature is installed
      check_mode: true
      ansible.windows.win_feature:
        name: Adcs-Cert-Authority
        state: present
        include_management_tools: "{{ winca_include_management_tools | default(false) }}"
      register: _winca_feature_installed

    - name: Verify Windows Feature is installed
      ansible.builtin.assert:
        that:
          - not _winca_feature_installed.changed
        fail_msg: The AD CS Certification Authority feature is not installed.
        success_msg: The AD CS Certification Authority feature is installed.

    - name: Verify IIS CertEnroll virtual directory
      when:
        - winca_add_certenroll_virtual_directory | default(false)
      block:
        - name: Check IIS roles are installed
          check_mode: true
          ansible.windows.win_feature:
            name:
              - Web-Default-Doc
              - Web-Dir-Browsing
              - Web-Http-Errors
              - Web-Static-Content
              - Web-Http-Redirect
              - Web-Http-Logging
              - Web-Log-Libraries
              - Web-Request-Monitor
              - Web-Http-Tracing
              - Web-Stat-Compression
              - Web-Windows-Auth
              - Web-ISAPI-Ext
              - Web-Mgmt-Console
              - Web-Metabase
            state: present
            include_management_tools: "{{ winca_install_management_tools | default(false) }}"
          register: _winca_iis_installed

        - name: Verify IIS roles are installed
          ansible.builtin.assert:
            that:
              - not _winca_iis_installed.changed
            fail_msg: The IIS roles are not installed.
            success_msg: The IIS roles are installed.
        
        - name: Check CertEnroll virtual directory is configured
          check_mode: true
          community.windows.win_iis_virtualdirectory:
            site: Default Web Site
            physical_path: C:\Windows\system32\CertSrv\CertEnroll
            name: CertEnroll
            state: present
          register: _winca_certenroll_virtual_directory_installed

        - name: Verify CertEnroll virtual directory is configured
          ansible.builtin.assert:
            that:
              - not _winca_certenroll_virtual_directory_installed.changed
            fail_msg: The CertEnroll virtual directory is not configured.
            success_msg: The CertEnroll virtual directory is configured.

- name: Verify standalone root CA
  hosts:
    - srootca
  gather_facts: false
  tasks:
    - name: Check Certification Authority is installed
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthority
        IsSingleInstance: 'Yes'
        CAType: StandaloneRootCA
        Ensure: Present
        Credential_username: "{{ winca_username }}"
        Credential_password: "{{ winca_password }}"
        CACommonName: "{{ winca_ca_cert_common_name }}"
        CADistinguishedNameSuffix: "{{ winca_ca_distinguished_name_suffix }}"
        CryptoProviderName: "{{ winca_crypto_provider_name }}"
        DatabaseDirectory: "{{ winca_database_directory }}"
        HashAlgorithmName: "{{ winca_hash_algorithm_name }}"
        KeyLength: "{{ winca_key_length }}"
        LogDirectory: "{{ winca_log_directory }}"
        ValidityPeriod: "{{ winca_ca_cert_validity_period_unit }}"
        ValidityPeriodUnits: "{{ winca_ca_cert_validity_period }}"
      register: _winca_ca_installed

    - name: Verify Certification Authority is installed
      ansible.builtin.assert:
        that: 
          - not _winca_ca_installed.changed
        fail_msg: The AD CS Certification Authority is not installed.
        success_msg: The AD CS Certification Authority is installed.

    - name: Check Certification Authority Settings are applied
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthoritySettings
        IsSingleInstance: 'Yes'
        CACertPublicationURLs: "{{ winca_ca_cert_publication_urls }}"
        CRLPublicationURLs: "{{ winca_crl_publication_urls }}"
        ValidityPeriodUnits: "{{ winca_issued_cert_validity_period }}"
        ValidityPeriod: "{{ winca_issued_cert_validity_period_unit }}"
        DSConfigDN: "{{ winca_ad_config_distinguished_name }}"
        DSDomainDN: "{{ winca_ad_base_distinguished_name }}"
        AuditFilter: "{{ winca_audit_filter }}"
        CRLOverlapUnits: "{{ winca_crl_overlap_period }}"
        CRLOverlapPeriod: "{{ winca_crl_overlap_period_unit }}"
        CRLPeriodUnits: "{{ winca_crl_period }}"
        CRLPeriod: "{{ winca_crl_period_unit }}"
      register: _winca_ca_settings_applied

    - name: Verify Certification Authority Settings are applied
      ansible.builtin.assert:
        that:
          - not _winca_ca_settings_applied.changed
        fail_msg: The AD CS Certification Authority settings are not applied.
        success_msg: The AD CS Certification Authority settings are applied.

- name: Verify enterprise root CA
  hosts:
    - erootca
  gather_facts: false
  tasks:
    - name: Ensure Certification Authority is installed
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthority
        IsSingleInstance: 'Yes'
        CAType: EnterpriseRootCA
        Ensure: Present
        Credential_username: "{{ winca_username }}"
        Credential_password: "{{ winca_password }}"
        CACommonName: "{{ winca_ca_cert_common_name }}"
        CADistinguishedNameSuffix: "{{ winca_ca_distinguished_name_suffix }}"
        CryptoProviderName: "{{ winca_crypto_provider_name }}"
        DatabaseDirectory: "{{ winca_database_directory }}"
        HashAlgorithmName: "{{ winca_hash_algorithm_name }}"
        KeyLength: "{{ winca_key_length }}"
        LogDirectory: "{{ winca_log_directory }}"
        ValidityPeriod: "{{ winca_ca_cert_validity_period_unit }}"
        ValidityPeriodUnits: "{{ winca_ca_cert_validity_period }}"
      register: _winca_ca_installed

    - name: Verify Certification Authority is installed
      ansible.builtin.assert:
        that: 
          - not _winca_ca_installed.changed
        fail_msg: The AD CS Certification Authority is not installed.
        success_msg: The AD CS Certification Authority is installed.

    - name: Ensure Certification Authority Settings are applied
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthoritySettings
        IsSingleInstance: 'Yes'
        CACertPublicationURLs: "{{ winca_ca_cert_publication_urls }}"
        CRLPublicationURLs: "{{ winca_crl_publication_urls }}"
        ValidityPeriodUnits: "{{ winca_issued_cert_validity_period }}"
        ValidityPeriod: "{{ winca_issued_cert_validity_period_unit }}"
        DSConfigDN: "{{ winca_ad_config_distinguished_name }}"
        DSDomainDN: "{{ winca_ad_base_distinguished_name }}"
        AuditFilter: "{{ winca_audit_filter }}"
        CRLOverlapUnits: "{{ winca_crl_overlap_period }}"
        CRLOverlapPeriod: "{{ winca_crl_overlap_period_unit }}"
        CRLPeriodUnits: "{{ winca_crl_period }}"
        CRLPeriod: "{{ winca_crl_period_unit }}"
      register: _winca_ca_settings_applied

    - name: Verify Certification Authority Settings are applied
      ansible.builtin.assert:
        that:
          - not _winca_ca_settings_applied.changed
        fail_msg: The AD CS Certification Authority settings are not applied.
        success_msg: The AD CS Certification Authority settings are applied.

- name: Verify standalone subordinate CA
  hosts:
    - ssubca
  gather_facts: false
  tasks:
    - name: Ensure Certification Authority is installed
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthority
        IsSingleInstance: 'Yes'
        CAType: StandaloneSubordinateCA
        Ensure: Present
        Credential_username: "{{ winca_username }}"
        Credential_password: "{{ winca_password }}"
        DatabaseDirectory: "{{ winca_database_directory }}"
        LogDirectory: "{{ winca_log_directory }}"
        ValidityPeriod: "{{ winca_ca_cert_validity_period_unit }}"
        ValidityPeriodUnits: "{{ winca_ca_cert_validity_period }}"
      register: _winca_ca_installed

    - name: Verify Certification Authority is installed
      ansible.builtin.assert:
        that: 
          - not _winca_ca_installed.changed
        fail_msg: The AD CS Certification Authority is not installed.
        success_msg: The AD CS Certification Authority is installed.

    - name: Ensure Certification Authority Settings are applied
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthoritySettings
        IsSingleInstance: 'Yes'
        CACertPublicationURLs: "{{ winca_ca_cert_publication_urls }}"
        CRLPublicationURLs: "{{ winca_crl_publication_urls }}"
        ValidityPeriodUnits: "{{ winca_issued_cert_validity_period }}"
        ValidityPeriod: "{{ winca_issued_cert_validity_period_unit }}"
        DSConfigDN: "{{ winca_ad_config_distinguished_name }}"
        DSDomainDN: "{{ winca_ad_base_distinguished_name }}"
        AuditFilter: "{{ winca_audit_filter }}"
        CRLOverlapUnits: "{{ winca_crl_overlap_period }}"
        CRLOverlapPeriod: "{{ winca_crl_overlap_period_unit }}"
        CRLPeriodUnits: "{{ winca_crl_period }}"
        CRLPeriod: "{{ winca_crl_period_unit }}"
      register: _winca_ca_settings_applied

    - name: Verify Certification Authority Settings are applied
      ansible.builtin.assert:
        that:
          - not _winca_ca_settings_applied.changed
        fail_msg: The AD CS Certification Authority settings are not applied.
        success_msg: The AD CS Certification Authority settings are applied.

- name: Verify enterprise subordinate CA
  hosts:
    - esubca
  gather_facts: false
  tasks:
    - name: Ensure Certification Authority is installed
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthority
        IsSingleInstance: 'Yes'
        CAType: EnterpriseSubordinateCA
        Ensure: Present
        Credential_username: "{{ winca_username }}"
        Credential_password: "{{ winca_password }}"
        DatabaseDirectory: "{{ winca_database_directory }}"
        LogDirectory: "{{ winca_log_directory }}"
        ValidityPeriod: "{{ winca_ca_cert_validity_period_unit }}"
        ValidityPeriodUnits: "{{ winca_ca_cert_validity_period }}"
      register: _winca_ca_installed

    - name: Verify Certification Authority is installed
      ansible.builtin.assert:
        that: 
          - not _winca_ca_installed.changed
        fail_msg: The AD CS Certification Authority is not installed.
        success_msg: The AD CS Certification Authority is installed.

    - name: Ensure Certification Authority Settings are applied
      check_mode: true
      ansible.windows.win_dsc:
        resource_name: AdcsCertificationAuthoritySettings
        IsSingleInstance: 'Yes'
        CACertPublicationURLs: "{{ winca_ca_cert_publication_urls }}"
        CRLPublicationURLs: "{{ winca_crl_publication_urls }}"
        ValidityPeriodUnits: "{{ winca_issued_cert_validity_period }}"
        ValidityPeriod: "{{ winca_issued_cert_validity_period_unit }}"
        DSConfigDN: "{{ winca_ad_config_distinguished_name }}"
        DSDomainDN: "{{ winca_ad_base_distinguished_name }}"
        AuditFilter: "{{ winca_audit_filter }}"
        CRLOverlapUnits: "{{ winca_crl_overlap_period }}"
        CRLOverlapPeriod: "{{ winca_crl_overlap_period_unit }}"
        CRLPeriodUnits: "{{ winca_crl_period }}"
        CRLPeriod: "{{ winca_crl_period_unit }}"
      register: _winca_ca_settings_applied

    - name: Verify Certification Authority Settings are applied
      ansible.builtin.assert:
        that:
          - not _winca_ca_settings_applied.changed
        fail_msg: The AD CS Certification Authority settings are not applied.
        success_msg: The AD CS Certification Authority settings are applied.
