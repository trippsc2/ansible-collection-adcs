---
dependency:
  name: galaxy
driver:
  name: vagrant
  provider:
    name: libvirt
  cachier: machine
  parallel: true
platforms:
  - name: ca
    box: jtarpley/w2022_cis
    memory: 2048
    cpus: 2
    provider_options:
      default_prefix: adcs_signed_certificate_win_
    groups:
      - windows
  - name: win
    box: jtarpley/${MOLECULE_BOX:-w2025_cis}
    memory: 2048
    cpus: 2
    provider_options:
      default_prefix: adcs_signed_certificate_win_
    groups:
      - subjects
      - windows
provisioner:
  name: ansible
  inventory:
    group_vars:
      subjects:
        cert_certificate_path: C:\Windows\Temp\cert.crt
        cert_private_key_path: C:\Windows\Temp\cert.key
        cert_signing_ca_hostname: ca
        cert_signing_ca_user: vagrant
        cert_signing_ca_password: vagrant
        cert_signing_ca_shell_type: powershell        
        cert_signing_ca_fqdn: ca
        cert_signing_ca_common_name: RootCA
        cert_signing_ca_csr_path: "C:\\Windows\\Temp\\{{ inventory_hostname }}.csr"
      windows:
        ansible_shell_type: powershell
        ansible_become_method: runas
        ansible_become_user: SYSTEM
        ansible_password: vagrant
    host_vars:
      ca:
        ansible_ssh_common_args: '-o PreferredAuthentications=password -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=60s -o ForwardX11=no -o LogLevel=ERROR -o StrictHostKeyChecking=no'
        winca_install_management_tools: true
        winca_is_root_ca: true
        winca_is_ad_integrated: false
        winca_username: .\vagrant
        winca_password: vagrant
        winca_ca_cert_common_name: RootCA
      win:
        ansible_ssh_common_args: '-o PreferredAuthentications=password -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=60s -o ForwardX11=no -o LogLevel=ERROR -o StrictHostKeyChecking=no'
verifier:
  name: ansible
